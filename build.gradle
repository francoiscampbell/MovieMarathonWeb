buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.4.3'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE'
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
}

version "1.0"
group "io.github.francoiscampbell.moviemarathon.web"

apply plugin: "spring-boot"
apply plugin: "war"
apply plugin: "asset-pipeline"
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url 'http://dl.bintray.com/francoiscampbell/maven' }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"

    compile "org.grails.plugins:hibernate"
    compile "org.grails.plugins:cache"
    compile "org.hibernate:hibernate-ehcache"

    compile("io.github.francoiscampbell:moviemarathon:+") {
        changing = true
    }

    runtime "org.grails.plugins:asset-pipeline:+"
    runtime "org.grails.plugins:scaffolding"

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"

    // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'

    console "org.grails:grails-console"
}

idea {
    module {
        downloadSources = true
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

task stage() {
    dependsOn clean, war
    doLast() {
        delete fileTree(dir: "build/distributions")
        delete fileTree(dir: "build/assetCompile")
        delete fileTree(dir: "build/distributions")
        delete fileTree(dir: "build/libs", exclude: "*.war")
    }
}

task tomcatUpload() {
    group = 'distribution'
    description = 'Upload to my Tomcat'
    dependsOn war
    doLast() {
        def sftpCommands = File.createTempFile("sftp", null)
        sftpCommands.append "put ${war.archivePath.absolutePath}\n"
        "sftp -b ${sftpCommands.absolutePath} root@moviemarathon.ca:temp".execute().waitFor()
    }
}

task tomcatDeploy() {
    group = 'distribution'
    description = 'Extract uploaded WAR file and restart Tomcat'
    doLast() {
        "ssh root@moviemarathon.ca\
                    ''initctl stop tomcat;\
                    cd /opt/tomcat/webapps/ROOT;\
                    rm -rf ./*;\
                    jar xf ~/temp/${war.archivePath.name};\
                    rm ~/temp/${war.archivePath.name};\
                    initctl start tomcat''".replaceAll("  *", " ").execute()
    }
}

task tomcat() {
    group = 'distribution'
    description = 'Runs tomcatUpload then tomcatDeploy'
    dependsOn tomcatUpload, tomcatDeploy
}
tomcatDeploy.mustRunAfter tomcatUpload

